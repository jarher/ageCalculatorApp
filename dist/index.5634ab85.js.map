{"mappings":"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","sources":["<anon>","app/assets/js/main.js","app/assets/js/animation/dateSecuence.js","app/assets/js/animation/DOMManipulation.js","app/assets/js/dateCalculate/calculateDateDifference.js","app/assets/js/dateCalculate/utils.js","app/assets/js/dateCalculate/dateValidate.js","app/assets/js/formValidator/index.js","app/assets/js/formValidator/utils/errorHandling.js","app/assets/js/formValidator/utils/eventHandlers.js","app/assets/js/formValidator/utils/formState.js","app/assets/js/formValidator/utils/formUtils.js","app/assets/js/formValidator/utils/validationUtils.js","app/assets/js/formValidator/utils/validator.js","app/assets/js/formValidator/validatorInitialize.js"],"sourcesContent":["const $b09329f862b4d7de$export$ec7d3deec108ed30 = (dateValueContainer, interCount)=>{\n    dateValueContainer.innerText = interCount;\n    dateValueContainer.style.opacity = 0;\n    setTimeout(()=>{\n        dateValueContainer.style.opacity = 1;\n    }, 20);\n};\nconst $b09329f862b4d7de$export$63ca66f6f48a1f00 = (selector)=>document.querySelector(selector);\nconst $b09329f862b4d7de$export$470ed143c2f099c5 = (dateValue, container)=>{\n    if (Number(dateValue).toString().length === 1) $b09329f862b4d7de$var$asignClass(container, \"units-number\");\n    if (Number(dateValue).toString().length === 2) $b09329f862b4d7de$var$asignClass(container, \"dozens-number\");\n    if (Number(dateValue).toString().length === 3) $b09329f862b4d7de$var$asignClass(container, \"cents-number\");\n    if (Number(dateValue).toString().length === 4) $b09329f862b4d7de$var$asignClass(container, \"thousands-number\");\n};\nconst $b09329f862b4d7de$var$asignClass = (container, className)=>{\n    Array.from(container.classList).forEach((name)=>container.classList.remove(name));\n    container.classList.add(className);\n};\n\n\nconst $87edb0c9bfa417d4$var$dateSecuence = ({ yearCalculated: yearCalculated, monthCalculated: monthCalculated, dayCalculated: dayCalculated })=>{\n    const date = [\n        {\n            dateValue: yearCalculated,\n            dateValueContainer: (0, $b09329f862b4d7de$export$63ca66f6f48a1f00)(\"#total-year span\")\n        },\n        {\n            dateValue: monthCalculated,\n            dateValueContainer: (0, $b09329f862b4d7de$export$63ca66f6f48a1f00)(\"#total-month span\")\n        },\n        {\n            dateValue: dayCalculated,\n            dateValueContainer: (0, $b09329f862b4d7de$export$63ca66f6f48a1f00)(\"#total-days span\")\n        }\n    ];\n    date.forEach((object)=>{\n        $87edb0c9bfa417d4$var$numberSecuenceAnimate(object);\n    });\n};\nconst $87edb0c9bfa417d4$var$numberSecuenceAnimate = ({ dateValue: dateValue, dateValueContainer: dateValueContainer })=>{\n    let interCount = 0;\n    let intervalId;\n    (0, $b09329f862b4d7de$export$470ed143c2f099c5)(dateValue, dateValueContainer);\n    if (!intervalId) intervalId = setInterval(()=>{\n        (0, $b09329f862b4d7de$export$ec7d3deec108ed30)(dateValueContainer, interCount);\n        if (interCount >= dateValue) {\n            clearInterval(intervalId);\n            intervalId = null;\n            interCount = 0;\n        }\n        interCount++;\n    }, 10);\n};\nvar $87edb0c9bfa417d4$export$2e2bcd8739ae039 = $87edb0c9bfa417d4$var$dateSecuence;\n\n\nconst $45464bc5727792a3$export$fb3374beb064f5ac = (year)=>{\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n};\nconst $45464bc5727792a3$export$a9c5239014acd147 = (isLeapYear)=>{\n    return isLeapYear ? 29 : 28;\n};\nconst $45464bc5727792a3$export$adaf307e533580e2 = ()=>{\n    const currentDate = new Date();\n    return {\n        currentYear: currentDate.getFullYear(),\n        currentMonth: currentDate.getMonth(),\n        currentDay: currentDate.getDate()\n    };\n};\nconst $45464bc5727792a3$export$4ef4a245f1454a2d = (daysInFebruary)=>[\n        31,\n        daysInFebruary,\n        31,\n        30,\n        31,\n        30,\n        31,\n        31,\n        30,\n        31,\n        30,\n        31\n    ];\nconst $45464bc5727792a3$export$b218f86596dcef41 = (values, getCurrentDate)=>{\n    const { currentYear: currentYear, currentMonth: currentMonth, currentDay: currentDay } = getCurrentDate();\n    const [birthDay, birthMonth, birthYear] = values;\n    const birthMonthValue = Number(birthMonth.value);\n    const birthDayValue = Number(birthDay.value);\n    const numberOfDaysInMonth = $45464bc5727792a3$export$4ef4a245f1454a2d($45464bc5727792a3$export$a9c5239014acd147($45464bc5727792a3$export$fb3374beb064f5ac(currentYear)));\n    let yearResult = currentYear - birthYear.value;\n    let currentMonthValue = currentMonth + 1;\n    let monthResult;\n    // month calculation\n    if (birthMonthValue > currentMonthValue) {\n        yearResult -= 1;\n        monthResult = 12 - (birthMonthValue - currentMonthValue - 1);\n    } else monthResult = currentMonthValue - birthMonthValue;\n    //day calculation\n    //return year, month and day calculated\n    return birthDayValue === currentDay && currentMonthValue === birthMonthValue ? [\n        yearResult,\n        monthResult,\n        0\n    ] : [\n        yearResult,\n        monthResult + (birthDayValue > currentDay ? -1 : 0),\n        birthDayValue > currentDay ? numberOfDaysInMonth[currentMonth - 1] - (birthDayValue - currentDay) : currentDay - birthDayValue\n    ];\n};\n\n\nconst $a16840abcc5dd4da$var$calculateDateDifference = (values)=>{\n    const [yearCalculated, monthCalculated, dayCalculated] = (0, $45464bc5727792a3$export$b218f86596dcef41)(values, (0, $45464bc5727792a3$export$adaf307e533580e2));\n    return {\n        yearCalculated: yearCalculated,\n        monthCalculated: monthCalculated,\n        dayCalculated: dayCalculated\n    };\n};\nvar $a16840abcc5dd4da$export$2e2bcd8739ae039 = $a16840abcc5dd4da$var$calculateDateDifference;\n\n\n\nconst $5b683feabe812f53$export$a544df56375be135 = (birth_day)=>{\n    const { currentYear: currentYear } = (0, $45464bc5727792a3$export$adaf307e533580e2)();\n    let isLeapYear = (0, $45464bc5727792a3$export$fb3374beb064f5ac)(document.getElementById(\"yearNumber\").value);\n    const days = (0, $45464bc5727792a3$export$4ef4a245f1454a2d)((0, $45464bc5727792a3$export$a9c5239014acd147)(isLeapYear));\n    const birth_month = document.getElementById(\"monthNumber\").value;\n    const birth_year = document.getElementById(\"yearNumber\").value;\n    if (birth_month > 12) return \"Must be a valid date\";\n    if (birth_day > days[birth_month - 1]) return birth_year < currentYear && birth_month <= 12 ? \"Must be a valid date\" : \"Must be a valid day\";\n};\nconst $5b683feabe812f53$export$8bef10385d342b11 = (birth_month)=>{\n    if (birth_month > 12) return \"Must be a valid month\";\n};\nconst $5b683feabe812f53$export$491b3c0bb7f3d792 = (birth_year)=>{\n    const { currentYear: currentYear } = (0, $45464bc5727792a3$export$adaf307e533580e2)();\n    if (birth_year > currentYear) return \"Must be in the past\";\n};\n\n\nconst $2b4fbb1a55c174db$export$95e917307336db5f = (data)=>{\n    try {\n        $2b4fbb1a55c174db$var$validateRequiredProperties(data);\n    } catch (error) {\n        console.error(error.message);\n    }\n};\nconst $2b4fbb1a55c174db$var$validateRequiredProperties = (data)=>{\n    const requiredProperties = [\n        \"initialValues\",\n        \"validatorSchema\",\n        \"formEvents\",\n        \"errorOutputSelector\",\n        \"formControlAttribute\"\n    ];\n    const missingProperties = requiredProperties.filter((property)=>!data.hasOwnProperty(property));\n    if (missingProperties.length > 0) throw new Error(`Missing required properties in form data: ${missingProperties.join(\", \")}`);\n};\n\n\nconst $13167a3f58d1fcf8$export$57bd624f3f90cd8c = (key, initialValues)=>{\n    document.getElementById(key).value = initialValues[key];\n};\nconst $13167a3f58d1fcf8$export$3e899390e3c4c13d = (errorMessage, id, rest)=>{\n    const { errorOutputSelector: errorOutputSelector, formControlAttribute: formControlAttribute } = rest;\n    const parentContainer = document.getElementById(id).parentElement;\n    parentContainer.querySelector(errorOutputSelector).innerText = errorMessage;\n    let isInvalidValue = errorMessage ? true : false;\n    // include class attribute to input parent container in case of errors\n    isInvalidValue ? parentContainer.classList.add(formControlAttribute) : parentContainer.classList.remove(formControlAttribute);\n    return isInvalidValue;\n};\n\n\nclass $dda84dfecc04fc78$var$Validator {\n    static validate(value, validatorSchemaValues) {\n        const { type: type, errors: errors } = validatorSchemaValues;\n        if (errors.hasOwnProperty(\"required\") && !value) return errors.required;\n        if (type === \"string\") {\n            if (!/^[a-zA-Z]+$/.test(value)) return errors.string;\n            if (errors.hasOwnProperty(\"min\")) {\n                if (value.length < errors.min.value) return errors.min.error;\n            }\n            if (errors.hasOwnProperty(\"max\")) {\n                if (value.length < errors.max.value) return errors.min.error;\n            }\n        }\n        if (type === \"email\") {\n            if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) return errors.email;\n        }\n        if (type === \"password\") {\n            if (!/^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(value)) return errors.password;\n        }\n        if (type === \"number\") {\n            if (!/^[0-9]+$/.test(value)) return errors.number;\n            if (errors.hasOwnProperty(\"min\")) {\n                const numberLength = Number(value).toString().length;\n                if (numberLength < errors.min.value) return errors.min.error;\n            }\n            if (errors.hasOwnProperty(\"max\")) {\n                const numberLength = Number(value).toString().length;\n                if (numberLength > errors.max.value) return errors.max.error;\n            }\n            if (errors.hasOwnProperty(\"customValidation\")) return errors.customValidation(value);\n        }\n    }\n}\nvar $dda84dfecc04fc78$export$2e2bcd8739ae039 = $dda84dfecc04fc78$var$Validator;\n\n\n\nconst $eb360be95156b58e$export$5656a047139a2d63 = (inputId, validatorSchema, rest)=>{\n    const errorMessage = $eb360be95156b58e$export$d33218a0cdcddb33(inputId, validatorSchema);\n    return (0, $13167a3f58d1fcf8$export$3e899390e3c4c13d)(errorMessage, inputId, rest);\n};\nconst $eb360be95156b58e$export$d33218a0cdcddb33 = (inputId, validatorSchema)=>{\n    const value = document.getElementById(inputId).value;\n    const validatorSchemaValues = validatorSchema[inputId];\n    const validateResponse = (0, $dda84dfecc04fc78$export$2e2bcd8739ae039).validate(value, validatorSchemaValues);\n    if (validateResponse === undefined) return \"\";\n    return validateResponse;\n};\n\n\nconst $135b48361af9fa5c$export$3374cfc036197cff = (changeErrorStateProps, inputId)=>{\n    changeErrorStateProps.inputId = inputId;\n    $135b48361af9fa5c$export$c51fbfce0af598e(changeErrorStateProps);\n};\nconst $135b48361af9fa5c$export$c51fbfce0af598e = ({ inputId: inputId, validatorSchema: validatorSchema, hasErrors: hasErrors, rest: rest })=>{\n    let isInvalid = (0, $eb360be95156b58e$export$5656a047139a2d63)(inputId, validatorSchema, rest);\n    hasErrors.forEach((object)=>{\n        if (object.inputId === inputId) object.isInvalid = isInvalid;\n    });\n};\nconst $135b48361af9fa5c$export$f11f335c7508d8fc = (inputFieldKeys, initialValues)=>{\n    return inputFieldKeys.map((key)=>{\n        (0, $13167a3f58d1fcf8$export$57bd624f3f90cd8c)(key, initialValues);\n        return {\n            inputId: key,\n            isInvalid: false\n        };\n    });\n};\n\n\nconst $f8f883a08ca6803e$var$addHandler = ({ handler: handler, eventValidatorProps: eventValidatorProps })=>{\n    const handlerProps = {\n        initialValuesKeys: eventValidatorProps.initialValuesKeys,\n        changeErrorStateProps: {\n            validatorSchema: eventValidatorProps.validatorSchema,\n            hasErrors: eventValidatorProps.hasErrors,\n            rest: eventValidatorProps.rest\n        }\n    };\n    handler(handlerProps);\n};\nconst $f8f883a08ca6803e$var$submitEventHandler = ({ initialValuesKeys: initialValuesKeys, changeErrorStateProps: changeErrorStateProps })=>{\n    // run validation if triggered submit event\n    const { hasErrors: hasErrors, rest: rest } = changeErrorStateProps;\n    document.querySelector(\"form\").addEventListener(\"submit\", (e)=>{\n        e.preventDefault();\n        initialValuesKeys.forEach((inputId)=>{\n            (0, $135b48361af9fa5c$export$3374cfc036197cff)(changeErrorStateProps, inputId);\n        });\n        if (hasErrors.length > 0) {\n            const hasInvalidValues = hasErrors.map((el)=>el.isInvalid).some((value)=>value === true);\n            if (!hasInvalidValues) {\n                const inputValues = initialValuesKeys.map((id)=>{\n                    return {\n                        idValue: id,\n                        value: document.getElementById(id).value\n                    };\n                });\n                if (rest.onSubmit) rest.onSubmit(inputValues);\n            }\n        }\n    });\n};\nconst $f8f883a08ca6803e$var$blurEventHandler = ({ changeErrorStateProps: changeErrorStateProps })=>{\n    //run validation if triggered blur event\n    document.querySelectorAll(\"input\").forEach((input)=>{\n        input.addEventListener(\"blur\", (e)=>{\n            const inputId = e.target.id;\n            (0, $135b48361af9fa5c$export$3374cfc036197cff)(changeErrorStateProps, inputId);\n        });\n    });\n};\nconst $f8f883a08ca6803e$export$d8cf0e8d53b53b90 = ({ validatorSchema: validatorSchema, formEvents: formEvents, ...rest }, initialValuesKeys, hasErrors)=>{\n    formEvents.map((event)=>({\n            handler: event === \"blur\" ? $f8f883a08ca6803e$var$blurEventHandler : $f8f883a08ca6803e$var$submitEventHandler,\n            eventValidatorProps: {\n                initialValuesKeys: initialValuesKeys,\n                validatorSchema: validatorSchema,\n                hasErrors: hasErrors,\n                rest: rest\n            }\n        })).forEach((formEventsObject)=>$f8f883a08ca6803e$var$addHandler(formEventsObject));\n};\n\n\n\nclass $1acc66f3408b925d$var$ValidatorInitialize {\n    constructor(formValidationData, runFormEvents, setInitialInputStates){\n        // this.validateRequiredProperties(formValidationData);\n        this.inputFieldKeys = Object.keys(formValidationData.initialValues);\n        this.validationErrors = setInitialInputStates(this.inputFieldKeys, formValidationData.initialValues);\n        runFormEvents(formValidationData, this.inputFieldKeys, this.validationErrors);\n    }\n    static resetValues() {\n        Array.from(document.querySelectorAll(\"input\")).forEach((input)=>input.value = \"\");\n    }\n}\nvar // ValidatorInitialize.prototype.validateRequiredProperties = function (data) {\n//   const requiredProperties = [\n//     \"initialValues\",\n//     \"validatorSchema\",\n//     \"formEvents\",\n//     \"errorOutputSelector\",\n//     \"formControlAttribute\",\n//   ];\n//   const missingProperties = requiredProperties.filter(\n//     (property) => !data.hasOwnProperty(property)\n//   );\n//   if (missingProperties.length > 0)\n//     throw new Error(\n//       `Missing required properties in form data: ${missingProperties.join(\n//         \", \"\n//       )}`\n//     );\n// };\n$1acc66f3408b925d$export$2e2bcd8739ae039 = $1acc66f3408b925d$var$ValidatorInitialize;\n\n\n//initialize new form validator\n//optionally return a resetValues function for restart input values.\n//that function is invoke inside onSubmit called in formValidation object\nconst $e3d56144e83f017f$var$validate = function() {\n    const formValidation = (data)=>{\n        (0, $2b4fbb1a55c174db$export$95e917307336db5f)(data);\n        new (0, $1acc66f3408b925d$export$2e2bcd8739ae039)(data, (0, $f8f883a08ca6803e$export$d8cf0e8d53b53b90), (0, $135b48361af9fa5c$export$f11f335c7508d8fc));\n    };\n    const resetValues = (0, $1acc66f3408b925d$export$2e2bcd8739ae039).resetValues;\n    return {\n        formValidation: formValidation,\n        resetValues: resetValues\n    };\n}();\nvar $e3d56144e83f017f$export$2e2bcd8739ae039 = $e3d56144e83f017f$var$validate;\n\n\nconst { formValidation: $01b5b5cfe943e286$var$formValidation } = (0, $e3d56144e83f017f$export$2e2bcd8739ae039);\nconst $01b5b5cfe943e286$var$validatorSchema = {\n    dayNumber: {\n        type: \"number\",\n        errors: {\n            number: \"Must be a valid day\",\n            min: {\n                value: 1,\n                error: \"Must be a valid day\"\n            },\n            max: {\n                value: 2,\n                error: \"Must be a valid day\"\n            },\n            customValidation: (birth_day)=>(0, $5b683feabe812f53$export$a544df56375be135)(birth_day),\n            required: \"This field is required\"\n        }\n    },\n    monthNumber: {\n        type: \"number\",\n        errors: {\n            number: \"Must be a valid month\",\n            min: {\n                value: 1,\n                error: \"Must be a valid month\"\n            },\n            max: {\n                value: 2,\n                error: \"Must be a valid month\"\n            },\n            customValidation: (birth_month)=>(0, $5b683feabe812f53$export$8bef10385d342b11)(birth_month),\n            required: \"This field is required\"\n        }\n    },\n    yearNumber: {\n        type: \"number\",\n        errors: {\n            number: \"Must be a valid year\",\n            min: {\n                value: 4,\n                error: \"Must be a valid year\"\n            },\n            max: {\n                value: 4,\n                error: \"Must be in the past\"\n            },\n            customValidation: (birth_year)=>(0, $5b683feabe812f53$export$491b3c0bb7f3d792)(birth_year),\n            required: \"This field is required\"\n        }\n    }\n};\n$01b5b5cfe943e286$var$formValidation({\n    initialValues: {\n        dayNumber: \"\",\n        monthNumber: \"\",\n        yearNumber: \"\"\n    },\n    validatorSchema: $01b5b5cfe943e286$var$validatorSchema,\n    formEvents: [\n        \"submit\"\n    ],\n    errorOutputSelector: \".input-error\",\n    formControlAttribute: \"form-wrapper-invalid\",\n    onSubmit: (values)=>{\n        const date = (0, $a16840abcc5dd4da$export$2e2bcd8739ae039)(values);\n        //animates result date\n        (0, $87edb0c9bfa417d4$export$2e2bcd8739ae039)(date);\n    }\n});\n\n\n//# sourceMappingURL=index.5634ab85.js.map\n","import dateSecuence from \"./animation/dateSecuence.js\";\r\nimport calculateDateDifference from \"./dateCalculate/calculateDateDifference.js\";\r\nimport {\r\n  dayValidate,\r\n  monthValidate,\r\n  yearValidate,\r\n} from \"./dateCalculate/dateValidate.js\";\r\nimport validate from \"./formValidator/index.js\";\r\n\r\nconst { formValidation } = validate;\r\n\r\nconst validatorSchema = {\r\n  dayNumber: {\r\n    type: \"number\",\r\n    errors: {\r\n      number: \"Must be a valid day\",\r\n      min: {\r\n        value: 1,\r\n        error: \"Must be a valid day\",\r\n      },\r\n      max: {\r\n        value: 2,\r\n        error: \"Must be a valid day\",\r\n      },\r\n      customValidation: (birth_day) => dayValidate(birth_day),\r\n      required: \"This field is required\",\r\n    },\r\n  },\r\n  monthNumber: {\r\n    type: \"number\",\r\n    errors: {\r\n      number: \"Must be a valid month\",\r\n      min: {\r\n        value: 1,\r\n        error: \"Must be a valid month\",\r\n      },\r\n      max: {\r\n        value: 2,\r\n        error: \"Must be a valid month\",\r\n      },\r\n      customValidation: (birth_month) => monthValidate(birth_month),\r\n      required: \"This field is required\",\r\n    },\r\n  },\r\n  yearNumber: {\r\n    type: \"number\",\r\n    errors: {\r\n      number: \"Must be a valid year\",\r\n      min: {\r\n        value: 4,\r\n        error: \"Must be a valid year\",\r\n      },\r\n      max: {\r\n        value: 4,\r\n        error: \"Must be in the past\",\r\n      },\r\n      customValidation: (birth_year) => yearValidate(birth_year),\r\n      required: \"This field is required\",\r\n    },\r\n  },\r\n};\r\n\r\nformValidation({\r\n  initialValues: {\r\n    dayNumber: \"\",\r\n    monthNumber: \"\",\r\n    yearNumber: \"\",\r\n  },\r\n  validatorSchema,\r\n  formEvents: [\"submit\"],\r\n  errorOutputSelector: \".input-error\",\r\n  formControlAttribute: \"form-wrapper-invalid\",\r\n  onSubmit: (values) => {\r\n    const date = calculateDateDifference(values);\r\n    //animates result date\r\n    dateSecuence(date);\r\n  },\r\n});\r\n","import {\r\n  getOutputContainer,\r\n  resizeNumberContainer,\r\n  animateContainer,\r\n} from \"./DOMManipulation.js\";\r\n\r\nconst dateSecuence = ({ yearCalculated, monthCalculated, dayCalculated }) => {\r\n  const date = [\r\n    {\r\n      dateValue: yearCalculated,\r\n      dateValueContainer: getOutputContainer(\"#total-year span\"),\r\n    },\r\n    {\r\n      dateValue: monthCalculated,\r\n      dateValueContainer: getOutputContainer(\"#total-month span\"),\r\n    },\r\n    {\r\n      dateValue: dayCalculated,\r\n      dateValueContainer: getOutputContainer(\"#total-days span\"),\r\n    },\r\n  ];\r\n  date.forEach((object) => {\r\n    numberSecuenceAnimate(object);\r\n  });\r\n};\r\n\r\nconst numberSecuenceAnimate = ({ dateValue, dateValueContainer }) => {\r\n  let interCount = 0;\r\n  let intervalId;\r\n  resizeNumberContainer(dateValue, dateValueContainer);\r\n\r\n  if (!intervalId) {\r\n    intervalId = setInterval(() => {\r\n      animateContainer(dateValueContainer, interCount);\r\n      if (interCount >= dateValue) {\r\n        clearInterval(intervalId);\r\n        intervalId = null;\r\n        interCount = 0;\r\n      }\r\n      interCount++;\r\n    }, 10);\r\n  }\r\n};\r\n\r\nexport default dateSecuence;\r\n","export const animateContainer = (dateValueContainer, interCount) => {\r\n  dateValueContainer.innerText = interCount;\r\n  dateValueContainer.style.opacity = 0;\r\n\r\n  setTimeout(() => {\r\n    dateValueContainer.style.opacity = 1;\r\n  }, 20);\r\n};\r\n\r\nexport const getOutputContainer = (selector) =>\r\n  document.querySelector(selector);\r\n\r\nexport const resizeNumberContainer = (dateValue, container) => {\r\n  if (Number(dateValue).toString().length === 1) {\r\n    asignClass(container, \"units-number\");\r\n  }\r\n  if (Number(dateValue).toString().length === 2) {\r\n    asignClass(container, \"dozens-number\");\r\n  }\r\n  if (Number(dateValue).toString().length === 3) {\r\n    asignClass(container, \"cents-number\");\r\n  }\r\n  if (Number(dateValue).toString().length === 4) {\r\n    asignClass(container, \"thousands-number\");\r\n  }\r\n};\r\n\r\nconst asignClass = (container, className) => {\r\n  Array.from(container.classList).forEach((name) =>\r\n    container.classList.remove(name)\r\n  );\r\n  container.classList.add(className);\r\n};\r\n","import { getCurrentDate, daysInCurrentMonth } from \"./utils.js\";\r\n\r\nconst calculateDateDifference = (values) => {\r\n  const [yearCalculated, monthCalculated, dayCalculated] = daysInCurrentMonth(\r\n    values,\r\n    getCurrentDate\r\n  );\r\n\r\n  return { yearCalculated, monthCalculated, dayCalculated };\r\n};\r\n\r\nexport default calculateDateDifference;\r\n","export const verifyIfIsLeapYear = (year) => {\r\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\r\n};\r\n\r\nexport const februaryDaysInALeapYear = (isLeapYear) => {\r\n  return isLeapYear ? 29 : 28;\r\n};\r\n\r\nexport const getCurrentDate = () => {\r\n  const currentDate = new Date();\r\n  return {\r\n    currentYear: currentDate.getFullYear(),\r\n    currentMonth: currentDate.getMonth(),\r\n    currentDay: currentDate.getDate(),\r\n  };\r\n};\r\n\r\nexport const monthLengths = (daysInFebruary) => [\r\n  31,\r\n  daysInFebruary,\r\n  31,\r\n  30,\r\n  31,\r\n  30,\r\n  31,\r\n  31,\r\n  30,\r\n  31,\r\n  30,\r\n  31,\r\n];\r\n\r\nexport const daysInCurrentMonth = (values, getCurrentDate) => {\r\n  const { currentYear, currentMonth, currentDay } = getCurrentDate();\r\n  const [birthDay, birthMonth, birthYear] = values;\r\n  const birthMonthValue = Number(birthMonth.value);\r\n  const birthDayValue = Number(birthDay.value);\r\n  const numberOfDaysInMonth = monthLengths(\r\n    februaryDaysInALeapYear(verifyIfIsLeapYear(currentYear))\r\n  );\r\n\r\n  let yearResult = currentYear - birthYear.value;\r\n  let currentMonthValue = currentMonth + 1;\r\n  let monthResult;\r\n  // month calculation\r\n\r\n  if (birthMonthValue > currentMonthValue) {\r\n    yearResult -= 1;\r\n    monthResult = 12 - (birthMonthValue - currentMonthValue - 1);\r\n  } else {\r\n    monthResult = currentMonthValue - birthMonthValue;\r\n  }\r\n\r\n  //day calculation\r\n  //return year, month and day calculated\r\n  return birthDayValue === currentDay && currentMonthValue === birthMonthValue\r\n    ? [yearResult, monthResult, 0]\r\n    : [\r\n        yearResult,\r\n        monthResult + (birthDayValue > currentDay ? -1 : 0),\r\n        birthDayValue > currentDay\r\n          ? numberOfDaysInMonth[currentMonth - 1] - (birthDayValue - currentDay)\r\n          : currentDay - birthDayValue,\r\n      ];\r\n};\r\n","import {\r\n  februaryDaysInALeapYear,\r\n  getCurrentDate,\r\n  monthLengths,\r\n  verifyIfIsLeapYear,\r\n} from \"./utils.js\";\r\n\r\nexport const dayValidate = (birth_day) => {\r\n  const { currentYear } = getCurrentDate();\r\n\r\n  let isLeapYear = verifyIfIsLeapYear(\r\n    document.getElementById(\"yearNumber\").value\r\n  );\r\n  const days = monthLengths(februaryDaysInALeapYear(isLeapYear));\r\n  const birth_month = document.getElementById(\"monthNumber\").value;\r\n  const birth_year = document.getElementById(\"yearNumber\").value;\r\n\r\n  if (birth_month > 12) {\r\n    return \"Must be a valid date\";\r\n  }\r\n  if (birth_day > days[birth_month - 1]) {\r\n    return birth_year < currentYear && birth_month <= 12\r\n      ? \"Must be a valid date\"\r\n      : \"Must be a valid day\";\r\n  }\r\n};\r\n\r\nexport const monthValidate = (birth_month) => {\r\n  if (birth_month > 12) return \"Must be a valid month\";\r\n};\r\n\r\nexport const yearValidate = (birth_year) => {\r\n  const { currentYear } = getCurrentDate();\r\n  if (birth_year > currentYear) return \"Must be in the past\";\r\n};\r\n","import { runError } from \"./utils/errorHandling.js\";\r\nimport { runFormEvents } from \"./utils/eventHandlers.js\";\r\nimport { setInitialInputStates } from \"./utils/formState.js\";\r\nimport ValidatorInitialize from \"./validatorInitialize.js\";\r\n\r\n//initialize new form validator\r\n//optionally return a resetValues function for restart input values.\r\n//that function is invoke inside onSubmit called in formValidation object\r\nconst validate = (function () {\r\n  const formValidation = (data) => {\r\n    runError(data);\r\n    new ValidatorInitialize(data, runFormEvents, setInitialInputStates);\r\n  };\r\n  const resetValues = ValidatorInitialize.resetValues;\r\n  return { formValidation, resetValues };\r\n})();\r\n\r\nexport default validate;\r\n","export const runError = (data) => {\r\n  try {\r\n    validateRequiredProperties(data);\r\n  } catch (error) {\r\n    console.error(error.message);\r\n  }\r\n};\r\n\r\nconst validateRequiredProperties = (data) => {\r\n  const requiredProperties = [\r\n    \"initialValues\",\r\n    \"validatorSchema\",\r\n    \"formEvents\",\r\n    \"errorOutputSelector\",\r\n    \"formControlAttribute\",\r\n  ];\r\n\r\n  const missingProperties = requiredProperties.filter(\r\n    (property) => !data.hasOwnProperty(property)\r\n  );\r\n\r\n  if (missingProperties.length > 0)\r\n    throw new Error(\r\n      `Missing required properties in form data: ${missingProperties.join(\r\n        \", \"\r\n      )}`\r\n    );\r\n};\r\n","import { changeState } from \"./formState.js\";\r\n\r\nconst addHandler = ({ handler, eventValidatorProps }) => {\r\n  const handlerProps = {\r\n    initialValuesKeys: eventValidatorProps.initialValuesKeys,\r\n    changeErrorStateProps: {\r\n      validatorSchema: eventValidatorProps.validatorSchema,\r\n      hasErrors: eventValidatorProps.hasErrors, // Uses original array\r\n      rest: eventValidatorProps.rest,\r\n    },\r\n  };\r\n  handler(handlerProps);\r\n};\r\n\r\nconst submitEventHandler = ({ initialValuesKeys, changeErrorStateProps }) => {\r\n  // run validation if triggered submit event\r\n  const { hasErrors, rest } = changeErrorStateProps;\r\n  document.querySelector(\"form\").addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    initialValuesKeys.forEach((inputId) => {\r\n      changeState(changeErrorStateProps, inputId);\r\n    });\r\n    if (hasErrors.length > 0) {\r\n      const hasInvalidValues = hasErrors\r\n        .map((el) => el.isInvalid)\r\n        .some((value) => value === true);\r\n\r\n      if (!hasInvalidValues) {\r\n        const inputValues = initialValuesKeys.map((id) => {\r\n          return { idValue: id, value: document.getElementById(id).value };\r\n        });\r\n        if (rest.onSubmit) {\r\n          rest.onSubmit(inputValues);\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nconst blurEventHandler = ({ changeErrorStateProps }) => {\r\n  //run validation if triggered blur event\r\n  document.querySelectorAll(\"input\").forEach((input) => {\r\n    input.addEventListener(\"blur\", (e) => {\r\n      const inputId = e.target.id;\r\n      changeState(changeErrorStateProps, inputId);\r\n    });\r\n  });\r\n};\r\n\r\nexport const runFormEvents = (\r\n  { validatorSchema, formEvents, ...rest },\r\n  initialValuesKeys,\r\n  hasErrors\r\n) => {\r\n  formEvents\r\n    .map((event) => ({\r\n      handler: event === \"blur\" ? blurEventHandler : submitEventHandler,\r\n      eventValidatorProps: {\r\n        initialValuesKeys,\r\n        validatorSchema,\r\n        hasErrors,\r\n        rest,\r\n      },\r\n    }))\r\n    .forEach((formEventsObject) => addHandler(formEventsObject));\r\n};\r\n","import { assignInputValue } from \"./formUtils.js\";\r\nimport { showValidationErrorMessage } from \"./validationUtils.js\";\r\n\r\nexport const changeState = (changeErrorStateProps, inputId) => {\r\n  changeErrorStateProps.inputId = inputId;\r\n  changeErrorState(changeErrorStateProps);\r\n};\r\n\r\nexport const changeErrorState = ({\r\n  inputId,\r\n  validatorSchema,\r\n  hasErrors,\r\n  rest,\r\n}) => {\r\n  let isInvalid = showValidationErrorMessage(inputId, validatorSchema, rest);\r\n  hasErrors.forEach((object) => {\r\n    if (object.inputId === inputId) {\r\n      object.isInvalid = isInvalid;\r\n    }\r\n  });\r\n};\r\n\r\nexport const setInitialInputStates = (inputFieldKeys, initialValues) => {\r\n  return inputFieldKeys.map((key) => {\r\n    assignInputValue(key, initialValues);\r\n    return {\r\n      inputId: key,\r\n      isInvalid: false,\r\n    };\r\n  });\r\n};\r\n","export const assignInputValue = (key, initialValues) => {\r\n  document.getElementById(key).value = initialValues[key];\r\n};\r\n\r\nexport const errorMessageControl = (errorMessage, id, rest) => {\r\n  const { errorOutputSelector, formControlAttribute } = rest;\r\n  const parentContainer = document.getElementById(id).parentElement;\r\n  parentContainer.querySelector(errorOutputSelector).innerText = errorMessage;\r\n  let isInvalidValue = errorMessage ? true : false;\r\n\r\n  // include class attribute to input parent container in case of errors\r\n  isInvalidValue\r\n    ? parentContainer.classList.add(formControlAttribute)\r\n    : parentContainer.classList.remove(formControlAttribute);\r\n\r\n  return isInvalidValue;\r\n};\r\n","import Validator from \"./validator.js\";\r\nimport { errorMessageControl } from \"./formUtils.js\";\r\n\r\nexport const showValidationErrorMessage = (inputId, validatorSchema, rest) => {\r\n  const errorMessage = validateFormResponse(inputId, validatorSchema);\r\n  return errorMessageControl(errorMessage, inputId, rest);\r\n};\r\n\r\nexport const validateFormResponse = (inputId, validatorSchema) => {\r\n  const value = document.getElementById(inputId).value;\r\n  const validatorSchemaValues = validatorSchema[inputId];\r\n  const validateResponse = Validator.validate(value, validatorSchemaValues);\r\n  if (validateResponse === undefined) return \"\";\r\n  return validateResponse;\r\n};\r\n","class Validator {\r\n  static validate(value, validatorSchemaValues) {\r\n    const { type, errors } = validatorSchemaValues;\r\n\r\n    if (errors.hasOwnProperty(\"required\") && !value) {\r\n      return errors.required;\r\n    }\r\n    if (type === \"string\") {\r\n      if (!/^[a-zA-Z]+$/.test(value)) {\r\n        return errors.string;\r\n      }\r\n      if (errors.hasOwnProperty(\"min\")) {\r\n        if (value.length < errors.min.value) {\r\n          return errors.min.error;\r\n        }\r\n      }\r\n      if (errors.hasOwnProperty(\"max\")) {\r\n        if (value.length < errors.max.value) {\r\n          return errors.min.error;\r\n        }\r\n      }\r\n    }\r\n    if (type === \"email\") {\r\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\r\n        return errors.email;\r\n      }\r\n    }\r\n\r\n    if (type === \"password\") {\r\n      if (\r\n        !/^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(value)\r\n      ) {\r\n        return errors.password;\r\n      }\r\n    }\r\n    if (type === \"number\") {\r\n      if (!/^[0-9]+$/.test(value)) {\r\n        return errors.number;\r\n      }\r\n\r\n      if (errors.hasOwnProperty(\"min\")) {\r\n        const numberLength = Number(value).toString().length;\r\n        if (numberLength < errors.min.value) {\r\n          return errors.min.error;\r\n        }\r\n      }\r\n\r\n      if (errors.hasOwnProperty(\"max\")) {\r\n        const numberLength = Number(value).toString().length;\r\n        if (numberLength > errors.max.value) {\r\n          return errors.max.error;\r\n        }\r\n      }\r\n\r\n      if (errors.hasOwnProperty(\"customValidation\")) {\r\n        return errors.customValidation(value);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Validator;\r\n","class ValidatorInitialize {\r\n  constructor(formValidationData, runFormEvents, setInitialInputStates) {\r\n    // this.validateRequiredProperties(formValidationData);\r\n    this.inputFieldKeys = Object.keys(formValidationData.initialValues);\r\n    this.validationErrors = setInitialInputStates(\r\n      this.inputFieldKeys,\r\n      formValidationData.initialValues\r\n    );\r\n    runFormEvents(\r\n      formValidationData,\r\n      this.inputFieldKeys,\r\n      this.validationErrors\r\n    );\r\n  }\r\n\r\n  static resetValues() {\r\n    Array.from(document.querySelectorAll(\"input\")).forEach(\r\n      (input) => (input.value = \"\")\r\n    );\r\n  }\r\n}\r\n\r\n// ValidatorInitialize.prototype.validateRequiredProperties = function (data) {\r\n//   const requiredProperties = [\r\n//     \"initialValues\",\r\n//     \"validatorSchema\",\r\n//     \"formEvents\",\r\n//     \"errorOutputSelector\",\r\n//     \"formControlAttribute\",\r\n//   ];\r\n\r\n//   const missingProperties = requiredProperties.filter(\r\n//     (property) => !data.hasOwnProperty(property)\r\n//   );\r\n\r\n//   if (missingProperties.length > 0)\r\n//     throw new Error(\r\n//       `Missing required properties in form data: ${missingProperties.join(\r\n//         \", \"\r\n//       )}`\r\n//     );\r\n// };\r\n\r\nexport default ValidatorInitialize;\r\n"],"names":["$b09329f862b4d7de$export$ec7d3deec108ed30","dateValueContainer","interCount","innerText","style","opacity","setTimeout","$b09329f862b4d7de$export$63ca66f6f48a1f00","selector","document","querySelector","$b09329f862b4d7de$export$470ed143c2f099c5","dateValue","container","Number","toString","length","$b09329f862b4d7de$var$asignClass","className","Array","from","classList","forEach","name","remove","add","$87edb0c9bfa417d4$var$numberSecuenceAnimate","intervalId","setInterval","clearInterval","$87edb0c9bfa417d4$export$2e2bcd8739ae039","yearCalculated","monthCalculated","dayCalculated","date","object","$45464bc5727792a3$export$fb3374beb064f5ac","year","$45464bc5727792a3$export$a9c5239014acd147","isLeapYear","$45464bc5727792a3$export$adaf307e533580e2","currentDate","Date","currentYear","getFullYear","currentMonth","getMonth","currentDay","getDate","$45464bc5727792a3$export$4ef4a245f1454a2d","daysInFebruary","$45464bc5727792a3$export$b218f86596dcef41","values","getCurrentDate","monthResult","birthDay","birthMonth","birthYear","birthMonthValue","value","birthDayValue","numberOfDaysInMonth","yearResult","currentMonthValue","$a16840abcc5dd4da$export$2e2bcd8739ae039","$5b683feabe812f53$export$a544df56375be135","birth_day","days","getElementById","birth_month","birth_year","$5b683feabe812f53$export$8bef10385d342b11","$5b683feabe812f53$export$491b3c0bb7f3d792","$2b4fbb1a55c174db$export$95e917307336db5f","data","$2b4fbb1a55c174db$var$validateRequiredProperties","error","console","message","missingProperties","requiredProperties","filter","property","hasOwnProperty","Error","join","$13167a3f58d1fcf8$export$57bd624f3f90cd8c","key","initialValues","$13167a3f58d1fcf8$export$3e899390e3c4c13d","errorMessage","id","rest","errorOutputSelector","formControlAttribute","parentContainer","parentElement","isInvalidValue","$dda84dfecc04fc78$export$2e2bcd8739ae039","validate","validatorSchemaValues","type","errors","required","test","string","min","max","email","password","number","numberLength","customValidation","$eb360be95156b58e$export$5656a047139a2d63","inputId","validatorSchema","$eb360be95156b58e$export$d33218a0cdcddb33","validateResponse","undefined","$135b48361af9fa5c$export$3374cfc036197cff","changeErrorStateProps","$135b48361af9fa5c$export$c51fbfce0af598e","hasErrors","isInvalid","$135b48361af9fa5c$export$f11f335c7508d8fc","inputFieldKeys","map","$f8f883a08ca6803e$var$addHandler","handler","eventValidatorProps","initialValuesKeys","$f8f883a08ca6803e$var$submitEventHandler","addEventListener","e","preventDefault","el","some","inputValues","idValue","onSubmit","$f8f883a08ca6803e$var$blurEventHandler","querySelectorAll","input","target","$f8f883a08ca6803e$export$d8cf0e8d53b53b90","formEvents","event","formEventsObject","$1acc66f3408b925d$export$2e2bcd8739ae039","constructor","formValidationData","runFormEvents","setInitialInputStates","Object","keys","validationErrors","resetValues","formValidation","$01b5b5cfe943e286$var$formValidation","dayNumber","monthNumber","yearNumber"],"version":3,"file":"index.5634ab85.js.map"}